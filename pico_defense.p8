pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- pico defense
-- by widearchshark

function _init()
	cf = 1
	
	cinit = init_menu
	cupdate = update_menu
	cdraw = draw_menu

	cinit()
end

function _update()
	cf += 1
	cupdate()
end

function _draw()
	cdraw()
end
-->8
-- main menu

function init_menu()
	tcol = 2
	menu_offset = 30
	
	menu_items = {
		"new game",
		"options",
		"help",
		"high scores"
	}
	
	item_selected = 1
end

function update_menu()
	tcol += 1
	if (tcol > 15) then
		tcol = 2
	end
	
	if (transitioning) then
		return
	end
	
	if(btnp(⬇️)) then
		sfx(0)
		item_selected += 1
	elseif(btnp(⬆️)) then
		sfx(0)
		item_selected -= 1
	end
	
	item_selected = mid(1, item_selected, #menu_items)
	
	if(btnp(❎)) then
		sfx(1)
		if(item_selected == 1) then
			change_state(init_game,update_game,draw_game)
		end
	end
end

function draw_menu()
	tcls(1)
	centre_text("pico defense",1,tcol)
	
	
	for i = 1, #menu_items do
		item_col = 7
		if (i == item_selected) item_col = 10
		centre_text(menu_items[i], 10*i+menu_offset, item_col)
	end
	
	spr(1,35,10*item_selected+menu_offset-1)
	
	centre_text("⬆️ / ⬇️ select",100,7)
	centre_text("❎ to confirm",110,7)
end

function centre_text(str, sy, col)
	local sx = 64 - flr((#str*4)/2)
	print(str,sx,sy,col)
end
-->8
-- game state
function init_game()
	add_turret(2,56,64,30)
	current_level = 1
	player_health = 100
end

function update_game()
	if (cf % 90 == 0) then
		add_enemy(1)
	end
	
	update_enemies()
	update_turrets()
end

function draw_game()
	tcls(1)
	map(0,0,0,0,16,12)
	draw_enemies()
	draw_turrets()
	centre_text("♥"..player_health.." $1000 w:1/10",1,7)
end
-->8
-- transition state

function transition_init()	
	transitioning = true
	clipy = 0
end

function transition_update()
	-- warning: make sure the update
	-- states in the two states are
	-- not running 'transition_states'
	-- if 'transitioning == true'
	aupdate()
	nupdate()
	clipy += 4
	if (clipy > 128) end_transition()
end

function end_transition()
		cinit = ninit
		cupdate = nupdate
		cdraw = ndraw
		clip()
		transitioning = false
end

function transition_draw()
 cls()
	ndraw()
	clip(0, clipy, 128, 128)
	adraw()	
end


function change_state(ninit1, nupdate1, ndraw1)
	ainit = cinit
	aupdate = cupdate
	adraw = cdraw
	
	ninit = ninit1
	nupdate = nupdate1
	ndraw = ndraw1
	
	cinit = transition_init
	cupdate = transition_update
	cdraw = transition_draw
		
	cinit()
	ninit()
end

function tcls(col)
	rectfill(0, 0, 128, 128, col)
end
-->8
-- enemies

level_paths = {
	{ -16, 40, 16, 40, 16, 32, 40, 32, 48, 32, 48, 72, 80, 72, 80, 40, 129, 40 }
}

enemy_types = {
	{ "circle of death", 48, 50, 0.75, 10 }
}

enemies = {}

function update_enemies()
	for e in all(enemies) do
		update_enemy(e)
	end
end

function draw_enemies()
	for e in all(enemies) do
		draw_enemy(e)
	end
end

function add_enemy(enemy_type)
	local e = {}
	e.spr = enemy_types[enemy_type][2]
	e.px = level_paths[current_level][1]
	e.py = level_paths[current_level][2]
	e.tx = level_paths[current_level][3]
	e.ty = level_paths[current_level][4]
	e.target_index = 3
	e.dead = false
	
	e.health = enemy_types[enemy_type][3]
	e.speed = enemy_types[enemy_type][4]
	e.damage = enemy_types[enemy_type][5]
	
	add(enemies, e)
end

function update_enemy(e)
	if (e.px < e.tx) then
		e.px += e.speed
	elseif (e.px > e.tx) then
		e.px -= e.speed
	end
	
	if (e.py < e.ty) then
		e.py += e.speed
	elseif (e.py > e.ty) then
		e.py -= e.speed
	end
	
	if (abs(e.px-e.tx) < e.speed and abs(e.py-e.ty) < e.speed) then
		e.px = e.tx
		e.py = e.ty
		
		e.target_index += 2
		
		if (e.target_index > #level_paths[1]) then
			inflict_damage(e.damage)
			sfx(2)
			e.dead = true
			del(enemies,e)
		else
			e.tx = level_paths[current_level][e.target_index]
			e.ty = level_paths[current_level][e.target_index+1]
		end
	end
	
end

function draw_enemy(e)
	spr(e.spr, e.px, e.py)
end

function inflict_damage(damage)
	player_health -= damage
	
	if (player_health <= 0) then
	end
end
-->8
-- turrets

turrets = {}

function add_turret(ts,tpx,tpy,tr,rof)
	t = {}
	t.s = ts -- root sprite
	t.px = tpx
	t.py = tpy
	t.cs = t.s -- current sprite
	t.r = tr -- range
	t.rof = rof -- rate of fire
	t.fx = false -- flip x
	t.fy = false -- flip y
	t.has_target = false
	t.enemy = nil
	
	add(turrets,t)
end

function update_turrets()
	for t in all(turrets) do
		update_turret(t)
	end
end

function draw_turrets()
	for t in all(turrets) do
		draw_turret(t)
	end
end

function update_turret(t)
	if (t.has_target) then
		if (t.enemy == nil or t.enemy.dead or distance(t.px,t.enemy.px,t.py,t.enemy.py) > t.r) then
			t.has_target = false
		else
			rotate_turret(t)
			maybe_fire(t)
		end
	else
		for e in all(enemies) do
			if (distance(t.px,e.px,t.py,e.py) < t.r) then
				t.has_target = true
				t.enemy = e
			end
		end
	end
end

function rotate_turret(t)
	local r = atan2((t.px+4)-(t.enemy.px+4),(t.py+4)-(t.enemy.py+4))
	
	if (r < 0.125) then
		t.cs = t.s
		t.fx = false
		t.fy = false
	elseif (r < 0.25) then
		t.cs = t.s+2
		t.fx = false
		t.fy = false
	elseif (r < 0.375) then
		t.cs = t.s+1
		t.fx = false
		t.fy = false
	elseif (r < 0.5) then
		t.cs = t.s+2
		t.fx = true
		t.fy = false
	elseif (r < 0.625) then
		t.cs = t.s
		t.fx = true
		t.fy = false
	elseif (r < 0.75) then
		t.cs = t.s+2
		t.fx = true
		t.fy = true
	elseif (r < 0.875) then
		t.cs = t.s+1
		t.fx = false
		t.fy = true
	else
		t.cs = t.s+2
		t.fx = false
		t.fy = true
	end

end

function draw_turret(t)
	spr(t.cs,t.px,t.py,1,1,t.fx,t.fy)
end

function distance(x1,x2,y1,y2)
	local dx = abs(x1-x2)
	local dy = abs(y1-y2)
	return sqrt((dx*dx) + (dy*dy))
end

function maybe_fire(t)
	if (t.rof % cf == 0)
		-- add bullet
	end
end
-->8
-- bullets

bullets = {}

function update_bullets()
	for b in all(bullets) do
		update_bullet(b)
	end
end

function draw_bullets()
	for b in all(bullets) do
		draw_bullet(b)
	end
end

function add_bullet(px, py, size, speed, target, dmg)
	local b = {}
	b.px, b.py = px, py
	b.size = size	
	b.speed = speed
	b.target = target
	b.damage = dmg
	
	add(bullets, b)	
end

function update_bullet(b)
end

function draw_bullet(b)
	circfill(b.px, b.py, b.size)
end
__gfx__
00000000a00000000066660000666600006666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000aa0000000666666006666660066656600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700aaa000006664456666555566666445660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000aaaa00004444456666444466666444560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000aaa000004444456666444466664444660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700aa0000006664456666644666644466660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a00000000666666006644660044666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000066660000644600006666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333444444334444443344444433333333333333333000000000000000000000000000000000000000000000000000000000000000000000000
33333333444443443443444333444444444444433343444444444433000000000000000000000000000000000000000000000000000000000000000000000000
33333333444444443444444334444444444344333444444444444443000000000000000000000000000000000000000000000000000000000000000000000000
33333333444444443444444334434444444444433444434444344443000000000000000000000000000000000000000000000000000000000000000000000000
33333333444444443444443334444444444444433444444444444443000000000000000000000000000000000000000000000000000000000000000000000000
33333333444434443344444334444444444444433344444444444443000000000000000000000000000000000000000000000000000000000000000000000000
33333333434444443444444333444444443444333444444444443443000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333444444333333333333333333443444334444433000000000000000000000000000000000000000000000000000000000000000000000000
33bbbb33333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3bbbbbb3333a33330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3bbbbbb333a8a3330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3bbbbbb3333a33330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33bbbb33333b33330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33344333333b33330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33344333333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33444433333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07444470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
74444447000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
74488447000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
74488447000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
74444447000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07444470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010201010101010102010101020101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010201010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010151111111610102110101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111141010101210101015111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101210201012101021101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1020101020101210101012101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101210101012211010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101311111114101020101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2110101010211010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010201010101010211010211010211000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000500000e05010000100000f0000f0000e00022000210001f0001d0001c0001a0001900017000160001500013000120000f00000000000000000000000000000000000000000000000000000000000000000000
000600000e05013050160501a05000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000500002e6502d6502c6502a650286502565023650216501f6501d6501b650186401763014620136100060000600006000060000600006000060000600006000060000600006000060000600006000060000600
